
/* 
    Copyright (c) 2007-2013 William Andrew Burnson.
    Copyright (c) 2013-2018 Nicolas Danet.
    
*/

/* < http://opensource.org/licenses/BSD-2-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace belle {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

struct Binary {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

static String make (const String& name, const Array < byte > & data)
{
    String s;
    
    s << newLine;
    s << "/* Auto-generated file. */" << newLine;
    s << newLine;
    s << "// ====================================" << newLine;
    s << newLine;
    s << "namespace belle {" << newLine;
    s << newLine;
    s << "extern const prim::byte* " << name << ";" << newLine;
    s << newLine;
    s << "#ifdef BELLE_COMPILE_INLINE" << newLine;
    s << newLine;
    s << "static const prim::byte " << name <<"Data[" << data.size() <<"] = " << newLine;
    s << Tab << "{";
    
    for (int i = 0; i < data.size(); ++i) {
    //
    if ((i % 10) == 0) { s << newLine << Tab << Tab; }
    s << String (String::paddedLeft (static_cast < int > (data[i]), 4).c_str());
    if (i != (data.size() - 1)) { s << ","; }
    //
    }
    
    s << newLine;
    s << Tab << "};" << newLine;
    s << newLine;
    s << "const prim::byte* " << name;
    s << " = static_cast < const prim::byte* > (" << name << "Data);" << newLine;
    s << newLine;
    s << "#endif // BELLE_COMPILE_INLINE" << newLine;
    s << newLine;
    s << "} // namespace belle" << newLine;
    s << newLine;
    
    return s;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace belle

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
