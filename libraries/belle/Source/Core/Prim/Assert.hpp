
/* 
    Copyright (c) 2007-2013 William Andrew Burnson.
    Copyright (c) 2013-2018 Nicolas Danet.
    
*/  

/* < http://opensource.org/licenses/BSD-2-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace prim {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

struct Assert {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static void debugAssert (const char* file, const int line)
{
    const char *t = (strrchr (file, '/') ? strrchr (file, '/') + 1 : file);
    
    std::ostringstream s;
    
    s << ">>> Assert / ";
    s << t;
    s << " / line ";
    s << line;
    
    std::cerr << s.str() << std::endl;
}

static void debugLeak (const char* name, int count)
{
    std::ostringstream s;
    
    s << ">>> Leak / ";
    s << name;
    s << " / ";
    s << count;
    
    std::cerr << s.str() << std::endl;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

template < bool B > struct StaticAssert;

template <> struct StaticAssert < true > { static void dummy() { } };

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace prim

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#if BELLE_WITH_DEBUG
    #define PRIM_ASSERT(x)          if (!(x)) { prim::Assert::debugAssert (__FILE__, __LINE__); }
#else
    #define PRIM_ASSERT(x)
#endif

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#if PRIM_CPP11
    #define PRIM_STATIC_ASSERT(x)   static_assert ((x), "")
#else
    #define PRIM_STATIC_ASSERT(x)   prim::StaticAssert < x >::dummy();
#endif

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
