
/* 
    Copyright (c) 2007-2013 William Andrew Burnson.
    Copyright (c) 2013-2018 Nicolas Danet.
    
*/

/* < http://opensource.org/licenses/BSD-2-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

/* From Gentium.ttf to bellefont. */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#define BELLE_COMPILE_INLINE

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#include "../Source/Belle.hpp"
#include "../Source/Core/FreeType/FreeType.hpp"

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

using namespace prim;
using namespace belle;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void convert (const String& name)
{
    /* LLVM analyzer (clang-802.0.42) seems to report false positives. */
    
    #ifndef __clang_analyzer__
    
    Typeface typeface;
    
    String filepath;
    filepath << "../../../Resources/Gentium/" << String (name) << ".ttf";
        
    if (typeface.importFont (filepath.toCString())) {
        Array < byte > t;
        typeface.exportBinary (t);
        File::writeFromArray ((String (name) << ".bellefont").toCString(), t);
    }
    
    #endif
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

int main()
{
    convert ("GentiumBasicRegular");
    convert ("GentiumBasicBold");
    convert ("GentiumBasicItalic");
    convert ("GentiumBasicBoldItalic");
    
    return 0;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
