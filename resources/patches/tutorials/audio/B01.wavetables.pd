#N canvas 113 57 722 608 12;
#X floatatom 164 43 0 0 0 0 - - -;
#N canvas 0 22 450 300 (subpatch) 0;
#X array table10 259 float 1;
#A 0 0.198738 0.2 0.198738 0.194981 0.188824 0.180418 0.169969 0.157737
0.144024 0.129169 0.113541 0.0975274 0.0815281 0.0659425 0.0511616
0.0375577 0.0254757 0.0152242 0.0070683 0.00122238 -0.00215498 -0.00296529
-0.00117288 0.00319392 0.010043 0.0192204 0.0305136 0.0436562 0.0583341
0.0741931 0.0908463 0.107884 0.124884 0.141421 0.157075 0.171446 0.184161
0.194882 0.203319 0.209234 0.212446 0.212843 0.210377 0.205071 0.19702
0.186386 0.173396 0.158342 0.141567 0.123464 0.104465 0.0850286 0.0656351
0.0467698 0.0289144 0.012534 -0.00193341 -0.0140887 -0.0235814 -0.0301194
-0.0334769 -0.033501 -0.030117 -0.0233319 -0.0132355 -7.96073e-07 0.0161191
0.0347944 0.0556253 0.0781494 0.101851 0.126173 0.150526 0.174305 0.196902
0.217718 0.23618 0.251752 0.263952 0.272362 0.276642 0.276537 0.271887
0.262635 0.248829 0.230629 0.2083 0.182218 0.152859 0.120795 0.0866876
0.0512715 0.0153463 -0.0202397 -0.0546049 -0.0868514 -0.116082 -0.141419
-0.162022 -0.177105 -0.185952 -0.187937 -0.182535 -0.169336 -0.148056
-0.118545 -0.0807947 -0.0349418 0.0187318 0.0798 0.147697 0.221723
0.301058 0.384768 0.471824 0.561115 0.651471 0.741674 0.830486 0.916668
0.998996 1.07629 1.14743 1.21138 1.26719 1.31403 1.35121 1.37818 1.39452
1.4 1.39453 1.37819 1.35122 1.31404 1.2672 1.21139 1.14745 1.07631
0.999014 0.916686 0.830505 0.741693 0.65149 0.561135 0.471843 0.384786
0.301076 0.22174 0.147712 0.079814 0.0187443 -0.034931 -0.0807856 -0.118537
-0.14805 -0.169332 -0.182533 -0.187937 -0.185953 -0.177108 -0.162026
-0.141424 -0.116088 -0.086858 -0.0546122 -0.0202473 0.0153385 0.0512637
0.0866801 0.120788 0.152852 0.182212 0.208295 0.230624 0.248826 0.262632
0.271885 0.276536 0.276643 0.272364 0.263954 0.251755 0.236183 0.217722
0.196907 0.17431 0.150531 0.126178 0.101856 0.0781545 0.0556301 0.0347987
0.0161228 2.38827e-06 -0.013233 -0.02333 -0.0301159 -0.0335006 -0.0334773
-0.0301205 -0.0235831 -0.014091 -0.0019363 0.0125307 0.0289107 0.0467659
0.0656309 0.0850244 0.10446 0.12346 0.141563 0.158338 0.173393 0.186383
0.197018 0.20507 0.210376 0.212843 0.212447 0.209235 0.203321 0.194884
0.184163 0.171449 0.157078 0.141424 0.124888 0.107888 0.09085 0.0741966
0.0583375 0.0436592 0.0305162 0.0192226 0.0100448 0.00319514 -0.00117221
-0.00296519 -0.00215544 0.00122137 0.00706678 0.0152222 0.0254732 0.0375549
0.0511585 0.0659392 0.0815247 0.0975239 0.113537 0.129166 0.144021
0.157735 0.169967 0.180416 0.188823 0.19498 0.198737 0.2 0.198738;
#X coords 0 1.02 258 -1.02 258 130 1;
#X restore 445 47 graph;
#X text 30 123 oscillator -->;
#X text 33 8 WAVETABLE OSCILLATORS;
#X text 36 106 wavetable;
#X obj 164 70 mtof;
#X floatatom 164 97 0 0 0 0 - - -;
#X obj 164 123 tabosc4~ table10;
#X text 94 42 pitch->;
#X text 35 309 Note that I selected "save contents" in the properties
dialog for table10 (right click on the table to see.) If this isn't
set \, the waveform won't be remembered as part of the patch but will
be reinitialized to zero when the patch is reopened.;
#X msg 35 549 \; table10 cosinesum 256 0.2 -0.2 0.2 -0.2 0.2 -0.2 0.2
;
#X msg 578 240 \; table10 const 0;
#X text 597 217 CLEAR TABLE;
#X text 35 395 For efficiency's sake tabosc4~ requires that the table
have a power of two plus three points (64+3=67 \, 128+3=131 \, 256+3=259
\, etc.) If you want wraparound to work smoothly \, you should make
the last three points copies of the first three. This is done because
tabread4~ does 4-point interpolation.;
#X text 36 240 Here \, in place of the "osc~" cosine wave oscillator
\, we introduce the tabosc4~ oscillator which produces an arbitrary
waveform. You can draw in the waveform with the mouse.;
#X obj 164 151 output~;
#X text 38 494 If you want a specific sinusoidal composition \, you
can send table10 a message as below:;
#X connect 0 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 15 0;
#X connect 7 0 15 1;
