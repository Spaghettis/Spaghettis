#N canvas 510 42 372 417 12;
#X obj 36 324 output~;
#N canvas 0 22 500 350 more 0;
#X text 36 48 This is a Fourier-based "vocoder" (perhaps better called a "timbre stamp") like the one the Convolution brothers use. The "control source" is analyzed to get its spectral envelope \, which is then stamped onto the "filter input" by adjusting the amplitudes of its Fourier transform. The "filter input" is first whitened by the compression algorithm from the previous patch in this series. The best value of "squelch" to use depends critically on what kind of sounds are used for the filter input and the control source.;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 240 252 pd more;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 24 24 vocoder;
#X text 12 72 Cort&zack's secret.;
#N canvas 687 153 753 316 hann 0;
#X obj 36 264 tabwrite \$0-hann;
#X obj 36 24 loadbang;
#X obj 36 132 t f f;
#N canvas 0 22 500 350 \$0-hann 0;
#X array \$0-hann 1024 float 2;
#X coords 0 1 1024 0 250 175 1 0 0;
#X restore 468 72 graph \$0-hann;
#X obj 36 60 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X obj 36 96 uzi 1024;
#X obj 144 192 expr (-cos(($f1/512)*pi)/2)+0.5;
#X connect 1 0 4 0;
#X connect 2 0 6 0;
#X connect 2 1 0 1;
#X connect 4 0 5 0;
#X connect 5 2 2 0;
#X connect 6 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 240 276 pd hann;
#X obj 108 192 nbx 5 40 0 100 0 1 empty empty empty 0 -7 0 10 #ffffff #000000 #000000 30 100;
#N canvas 483 85 642 421 play 0;
#X obj 36 300 +~ 1;
#X obj 36 24 loadbang;
#X obj 36 372 outlet~;
#X obj 36 96 soundfiler;
#N canvas 0 22 500 350 \$0-table1 0;
#X array \$0-table1 155944 float 2;
#X coords 0 1 155944 -1 250 175 1 0 0;
#X restore 360 36 graph \$0-table1;
#X obj 36 132 t f f;
#X obj 108 216 phasor~;
#X obj 36 264 *~;
#X obj 108 180 expr 44100/$f1;
#X msg 36 60 read -resize bell.aiff \$0-table1;
#X obj 36 336 tabread4~ \$0-table1;
#X connect 0 0 10 0;
#X connect 1 0 9 0;
#X connect 3 0 5 0;
#X connect 5 0 8 0;
#X connect 5 1 7 1;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X connect 8 0 6 0;
#X connect 9 0 3 0;
#X connect 10 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 108 pd play;
#N canvas 147 50 795 617 fft 0;
#X obj 94 511 *~;
#X obj 55 511 *~;
#X obj 413 356 *~;
#X obj 372 356 *~;
#X obj 372 379 +~;
#X obj 54 183 *~;
#X obj 54 158 inlet~;
#X obj 54 206 rfft~;
#X obj 54 560 *~;
#X obj 141 245 *~;
#X obj 372 333 rfft~;
#X obj 54 535 rifft~;
#X obj 54 583 outlet~;
#X obj 107 245 *~;
#X obj 107 268 +~;
#X text 458 408 modulus;
#X obj 107 420 *~;
#X obj 600 13 block~ 1024 4;
#X obj 107 398 clip~;
#X obj 87 184 tabreceive~ \$0-hann;
#X obj 147 369 expr 0.01*$f1*$f1;
#X obj 107 294 +~ 1e-20;
#X obj 108 480 *~ 0.00065;
#X obj 87 560 tabreceive~ \$0-hann;
#X obj 373 307 *~;
#X obj 373 282 inlet~;
#X obj 406 308 tabreceive~ \$0-hann;
#X obj 107 321 q8_rsqrt~;
#X obj 372 402 q8_sqrt~;
#X text 458 425 of control;
#X text 456 442 amplitude;
#X text 196 248 reciprocal;
#X text 199 267 modulus of;
#X text 195 287 filter input;
#X text 196 306 amplitude;
#X text 115 159 filter input;
#X text 438 282 control source;
#X text 434 332 Fourier transform;
#X text 28 17 Internal workings of the timbre stamping algorithm. First the "filter input" is treated as in the compressor patch \, multiplying each channel amplitude by one over its modulus (but limited by the "squelch" parameter.) It is then multiplied by the modulus of the channel amplitude for the control source (which is Fourier analyzed in parallel with the filter input.);
#X text 145 422 multiply the two amplitude;
#X text 143 439 factors (for compression;
#X text 145 455 and to apply new timbre);
#X obj 552 156 inlet;
#X connect 0 0 11 1;
#X connect 1 0 11 0;
#X connect 2 0 4 1;
#X connect 3 0 4 0;
#X connect 4 0 28 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 13 0;
#X connect 7 0 13 1;
#X connect 7 0 1 0;
#X connect 7 1 9 0;
#X connect 7 1 9 1;
#X connect 7 1 0 0;
#X connect 8 0 12 0;
#X connect 9 0 14 1;
#X connect 10 0 3 0;
#X connect 10 0 3 1;
#X connect 10 1 2 0;
#X connect 10 1 2 1;
#X connect 11 0 8 0;
#X connect 13 0 14 0;
#X connect 14 0 21 0;
#X connect 16 0 22 0;
#X connect 18 0 16 0;
#X connect 19 0 5 1;
#X connect 20 0 18 2;
#X connect 21 0 27 0;
#X connect 22 0 0 1;
#X connect 22 0 1 1;
#X connect 23 0 8 1;
#X connect 24 0 10 0;
#X connect 25 0 24 0;
#X connect 26 0 24 1;
#X connect 27 0 18 0;
#X connect 28 0 16 1;
#X connect 42 0 20 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 276 pd fft;
#N canvas 483 85 642 421 play 0;
#X obj 36 300 +~ 1;
#X obj 36 24 loadbang;
#X obj 36 372 outlet~;
#X obj 36 96 soundfiler;
#N canvas 0 22 500 350 \$0-table2 0;
#X array \$0-table2 62079 float 2;
#X coords 0 1 62079 -1 250 175 1 0 0;
#X restore 360 36 graph \$0-table2;
#X obj 36 132 t f f;
#X obj 108 216 phasor~;
#X obj 36 264 *~;
#X obj 108 180 expr 44100/$f1;
#X obj 36 336 tabread4~ \$0-table2;
#X msg 36 60 read -resize voice.wav \$0-table2;
#X connect 0 0 9 0;
#X connect 1 0 10 0;
#X connect 3 0 5 0;
#X connect 5 0 8 0;
#X connect 5 1 7 1;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X connect 8 0 6 0;
#X connect 9 0 2 0;
#X connect 10 0 3 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 72 144 pd play;
#X connect 7 0 9 2;
#X connect 8 0 9 0;
#X connect 9 0 0 0;
#X connect 10 0 9 1;
#X coords 0 0 1 1 250 175 0 0 0;
