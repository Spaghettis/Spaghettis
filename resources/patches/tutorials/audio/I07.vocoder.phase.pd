#N canvas 518 201 459 393 12;
#X obj 36 300 output~;
#N canvas 127 22 1254 851 more 0;
#X text 24 24 This patch takes a sound \, analyzes windows in it both for channel magnitude and for phase precession in each channel (compared to another operlapping window). The real-time output recreates the same magnitudes and phase precession \, although the phases themselves are in general different. You can control either the location or its motion (setting location stops motion \, while setting a non-zero motion causes the location to change automatically). "Rewind" goes back to the beginning. You can use different window sizes (use the message boxes - the number box is for readout). The "lock" feature forces phase coherency between neighboring channels \, which makes a more present sound but can add artifacts to the sound. Look in "pd fft-analysis" to see the workings.;
#X text 612 156 Read two windows out of the recorded sample \, one 1/4 ahead of the other. The mid point of the front window is specified by "location". If "speed" is nonzero \, "location" automatically precesses.;
#X text 504 312 recall previous output amplitude. Its phase will be added to the phase difference we measure from two windows in the the recorded sound.;
#X text 492 360 divide by the magnitude to make a unit-magnitude complex amplitude (phase only). The 1e-20 is to prevent overflows. q8_rsqrt~ is reciprocal square root.;
#X text 492 420 Take FT of the window in back. Multiply its conjugate by the normalized previous output. The result has the magnitude of the input sound and phase (previous output phase) minus (back window phase).;
#X text 492 624 Normalize again \, this time taking care to salt each channel with 1e-15 so that we get a unit complex number even if everything was zero heretofore.;
#X text 528 684 Now take the FT of the forward window and multiply it by the unit complex number from above. The magnitude will be that of the forward window and the phase will be the previous output phase plus the phase difference between the two analysis windows -- except that if "lock" is on \, they will be modified to agree progressively better with the inter-channel phase relationships of the input.;
#X text 492 492 If "lock" is on \, encourage neighboring channels to stay in phase by adding the two neighboring complex amplitudes. The result will tend toward the channel with the strongest amplitude. If the phase relationships between channels in the output and those in the input are in parallel \, then neighboring channels of the quotient will all have the same phase and this will not change any phases. (lrshift shifts the signal to the left or right depending on its argument.);
#X text 540 264 Read two windows \, one 1/4 length behind the other \, of the input sound \, with Hann window function (see inside).;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 228 180 pd more;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X text 24 24 vocoder (phase);
#X obj -60 24 freeze;
#X text 12 72 Phase vocoder for time stretching and contraction.;
#N canvas 543 155 753 316 hann 0;
#X obj 36 264 tabwrite \$0-hann;
#X obj 36 24 loadbang;
#X obj 36 132 t f f;
#N canvas 0 22 500 350 \$0-hann 0;
#X array \$0-hann 1024 float 2;
#X coords 0 1 1024 0 250 175 1 0 0;
#X restore 468 72 graph \$0-hann;
#X obj 36 60 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X obj 36 96 uzi 1024;
#X obj 144 192 expr (-cos(($f1/512)*pi)/2)+0.5;
#X connect 1 0 4 0;
#X connect 2 0 6 0;
#X connect 2 1 0 1;
#X connect 4 0 5 0;
#X connect 5 2 2 0;
#X connect 6 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 228 252 pd hann;
#X obj 132 120 nbx 5 40 -12 12 0 1 empty empty empty 0 -7 0 10 #ffffff #000000 #000000 0 24;
#N canvas 337 158 647 245 sample 0;
#X obj 36 180 soundfiler;
#N canvas 0 22 500 350 \$0-sample 0;
#X array \$0-sample 62079 float 2;
#X coords 0 1 62079 -1 250 175 1 0 0;
#X restore 360 36 graph \$0-sample;
#X msg 36 60 read -resize voice.wav \$0-sample;
#X obj 36 24 loadbang;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 228 204 pd sample;
#N canvas 796 129 321 453 tables 0;
#N canvas 0 22 500 350 \$0-real 0;
#X array \$0-real 1024 float 2;
#X coords 0 64 1024 -64 250 175 1 0 0;
#X restore 36 36 graph \$0-real;
#N canvas 0 22 500 350 \$0-imaginary 0;
#X array \$0-imaginary 1024 float 2;
#X coords 0 64 1024 -64 250 175 1 0 0;
#X restore 36 240 graph \$0-imaginary;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 228 228 pd tables;
#N canvas 287 59 478 677 fft 0;
#X obj 84 336 *~;
#X obj 36 336 *~;
#X obj 36 372 -~;
#X obj 204 336 *~;
#X obj 156 336 *~;
#X obj 156 372 +~;
#X obj 204 168 *~;
#X obj 156 168 *~;
#X obj 84 168 *~;
#X obj 36 168 *~;
#X obj 36 204 +~;
#X obj 156 264 rfft~;
#X obj 156 108 rfft~;
#X obj 36 468 rifft~;
#X obj 36 624 outlet~;
#X obj 156 204 -~;
#X obj 36 552 *~;
#X obj 72 516 tabreceive~ \$0-hann;
#X obj 324 624 block~ 1024 4;
#X obj 36 588 /~ 1536;
#X obj 156 432 tabsend~ \$0-imaginary;
#X obj 156 468 tabsend~ \$0-real;
#N canvas 779 59 401 443 lock 0;
#X obj 36 24 inlet~;
#X obj 216 24 inlet~;
#X obj 36 396 outlet~;
#X obj 216 396 outlet~;
#X obj 132 228 *~;
#X obj 84 228 *~;
#X obj 84 264 +~;
#X obj 36 360 *~;
#X obj 216 360 *~;
#X obj 36 168 +~ 1e-15;
#X obj 84 72 lrshift~ 1;
#X obj 84 96 lrshift~ -1;
#X obj 264 72 lrshift~ 1;
#X obj 264 96 lrshift~ -1;
#X obj 36 132 +~;
#X obj 216 132 +~;
#X f 3;
#X obj 84 300 rsqrt~;
#X connect 0 0 14 0;
#X connect 0 0 10 0;
#X connect 0 0 11 0;
#X connect 1 0 15 0;
#X connect 1 0 12 0;
#X connect 1 0 13 0;
#X connect 4 0 6 1;
#X connect 5 0 6 0;
#X connect 6 0 16 0;
#X connect 7 0 2 0;
#X connect 8 0 3 0;
#X connect 9 0 5 1;
#X connect 9 0 5 0;
#X connect 9 0 7 0;
#X connect 10 0 14 1;
#X connect 11 0 14 1;
#X connect 12 0 15 1;
#X connect 13 0 15 1;
#X connect 14 0 9 0;
#X connect 15 0 4 0;
#X connect 15 0 4 1;
#X connect 15 0 8 0;
#X connect 16 0 7 1;
#X connect 16 0 8 1;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 264 pd lock;
#N canvas 288 111 483 365 temp 0;
#X obj 36 312 outlet~;
#X obj 240 312 outlet~;
#X obj 144 96 *~;
#X f 3;
#X obj 96 96 *~;
#X obj 96 132 +~;
#X f 4;
#X obj 96 168 +~ 1e-20;
#X obj 240 276 *~;
#X obj 36 276 *~;
#X obj 36 24 tabreceive~ \$0-real;
#X obj 240 24 tabreceive~ \$0-imaginary;
#X obj 96 204 rsqrt~;
#X connect 2 0 4 1;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 10 0;
#X connect 6 0 1 0;
#X connect 7 0 0 0;
#X connect 8 0 3 1;
#X connect 8 0 3 0;
#X connect 8 0 7 0;
#X connect 9 0 2 1;
#X connect 9 0 2 0;
#X connect 9 0 6 0;
#X connect 10 0 6 1;
#X connect 10 0 7 1;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 108 pd temp;
#N canvas 278 23 379 399 frames 0;
#X obj 36 312 *~;
#X obj 120 312 *~;
#X obj 36 24 bang~;
#X obj 120 204 +;
#X obj 36 348 outlet~;
#X obj 120 348 outlet~;
#X obj 168 264 tabreceive~ \$0-hann;
#X obj 120 180 f;
#N canvas 411 44 457 565 read 0;
#X obj 36 360 line~;
#X obj 180 324 / 4;
#X f 3;
#X obj 36 516 outlet~;
#X obj 252 516 outlet~;
#X obj 36 480 tabread4~ \$0-sample;
#X obj 252 480 tabread4~ \$0-sample;
#X obj 300 120 / 2;
#X obj 264 156 -;
#X obj 36 432 -~;
#X obj 36 288 f;
#X obj 264 24 inlet;
#X msg 36 324 0 \, \$1 5.80499;
#X obj 36 60 t f f f;
#X obj 264 192 t b f f;
#X obj 36 24 r \$0-chunk;
#X connect 0 0 8 0;
#X connect 0 0 5 0;
#X connect 1 0 8 1;
#X connect 4 0 2 0;
#X connect 5 0 3 0;
#X connect 6 0 7 1;
#X connect 7 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 11 0;
#X connect 10 0 7 0;
#X connect 11 0 0 0;
#X connect 12 0 9 1;
#X connect 12 1 1 0;
#X connect 12 2 6 0;
#X connect 13 0 9 0;
#X connect 13 1 4 1;
#X connect 13 2 5 1;
#X connect 14 0 12 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 240 pd read;
#X obj 120 60 * -0.5;
#X obj 36 204 f -2048;
#X obj 120 24 r \$0-chunk;
#X obj 240 24 r \$0-step;
#X obj 240 60 t b f;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 10 0;
#X connect 3 0 10 1;
#X connect 6 0 1 1;
#X connect 6 0 0 1;
#X connect 7 0 10 1;
#X connect 8 0 0 0;
#X connect 8 1 1 0;
#X connect 9 0 7 1;
#X connect 10 0 3 0;
#X connect 10 0 8 0;
#X connect 11 0 9 0;
#X connect 12 0 13 0;
#X connect 13 0 7 0;
#X connect 13 1 3 1;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 24 pd frames;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 13 0;
#X connect 2 0 21 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 13 1;
#X connect 5 0 20 0;
#X connect 6 0 15 1;
#X connect 7 0 15 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 22 0;
#X connect 11 0 1 1;
#X connect 11 0 3 1;
#X connect 11 1 0 1;
#X connect 11 1 4 1;
#X connect 12 0 9 1;
#X connect 12 0 7 1;
#X connect 12 1 6 1;
#X connect 12 1 8 1;
#X connect 13 0 16 0;
#X connect 15 0 22 1;
#X connect 16 0 19 0;
#X connect 17 0 16 1;
#X connect 19 0 14 0;
#X connect 22 0 1 0;
#X connect 22 0 4 0;
#X connect 22 1 0 0;
#X connect 22 1 3 0;
#X connect 23 0 9 0;
#X connect 23 0 6 0;
#X connect 23 1 8 0;
#X connect 23 1 7 0;
#X connect 24 0 12 0;
#X connect 24 1 11 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 252 pd fft;
#X msg 36 156 0.2;
#X msg 36 132 1;
#X msg 36 108 2;
#N canvas 288 67 271 305 control 0;
#X obj 144 60 + 69;
#X obj 144 96 mtof;
#X obj 144 132 / 440;
#X obj 144 24 inlet;
#X obj 144 168 * 1024;
#X obj 144 252 s \$0-chunk;
#X obj 36 24 inlet;
#X obj 36 168 * 256;
#X obj 36 252 s \$0-step;
#X floatatom 36 216 5 0 0 1 - - -;
#X f 5;
#X floatatom 144 216 5 0 0 1 - - -;
#X f 5;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 3 0 0 0;
#X connect 4 0 10 0;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 9 0 8 0;
#X connect 10 0 5 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 216 pd control;
#X connect 7 0 14 1;
#X connect 10 0 0 0;
#X connect 11 0 14 0;
#X connect 12 0 14 0;
#X connect 13 0 14 0;
#X coords 0 0 1 1 250 175 0 0 0;
