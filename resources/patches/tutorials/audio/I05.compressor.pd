#N canvas 371 148 419 373 12;
#X obj 36 288 output~;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 24 24 compressor;
#N canvas 313 343 756 134 more 0;
#X text 12 36 The "squelch" control limits the amplitude boost the algorithm will apply.;
#X f 74;
#X text 12 60 If infinite \, you'll get a white spectrum.;
#X text 12 84 Otherwise the louder parts of the spectrum are flattened and the quieter ones boosted.;
#X f 86;
#X text 12 12 Here we divide each complex channel by its own magnitude to "flatten" the spectrum.;
#X f 83;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 180 228 pd more;
#N canvas 687 153 753 316 hann 0;
#X obj 36 264 tabwrite \$0-hann;
#X obj 36 24 loadbang;
#X obj 36 132 t f f;
#N canvas 0 22 500 350 \$0-hann 0;
#X array \$0-hann 1024 float 2;
#X coords 0 1 1024 0 250 175 1 0 0;
#X restore 468 72 graph \$0-hann;
#X obj 36 60 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X obj 36 96 uzi 1024;
#X obj 144 192 expr (-cos(($f1/512)*pi)/2)+0.5;
#X connect 1 0 4 0;
#X connect 2 0 6 0;
#X connect 2 1 0 1;
#X connect 4 0 5 0;
#X connect 5 2 2 0;
#X connect 6 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 180 252 pd hann;
#X obj 120 156 nbx 5 40 0 20 0 1 empty empty empty 0 -7 0 10 #ffffff #000000 #000000 8 20;
#N canvas 599 84 642 421 play 0;
#X obj 36 300 +~ 1;
#X obj 36 24 loadbang;
#X obj 36 372 outlet~;
#X obj 36 96 soundfiler;
#X msg 36 60 read -resize bell.aiff \$0-table;
#N canvas 0 22 500 350 \$0-table 0;
#X array \$0-table 155944 float 2;
#X coords 0 1 155944 -1 250 175 1 0 0;
#X restore 360 36 graph \$0-table;
#X obj 36 132 t f f;
#X obj 108 216 phasor~;
#X obj 36 264 *~;
#X obj 108 180 expr 44100/$f1;
#X obj 36 336 tabread4~ \$0-table;
#X connect 0 0 10 0;
#X connect 1 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 6 0 9 0;
#X connect 6 1 8 1;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X connect 9 0 7 0;
#X connect 10 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 108 pd play;
#N canvas 827 50 506 721 fft 0;
#X obj 108 492 *~;
#X obj 36 492 *~;
#X obj 36 120 *~;
#X obj 36 24 inlet~;
#X obj 36 156 rfft~;
#X obj 36 624 *~;
#X obj 228 240 *~;
#X obj 36 540 rifft~;
#X obj 36 672 outlet~;
#X obj 168 240 *~;
#X obj 168 276 +~;
#X obj 300 672 block~ 1024 4;
#X obj 168 396 clip~;
#X obj 84 84 tabreceive~ \$0-hann;
#X obj 300 312 expr 0.01*$f1*$f1;
#X obj 168 312 +~ 1e-20;
#X obj 84 588 tabreceive~ \$0-hann;
#X obj 300 24 inlet;
#X obj 168 348 rsqrt~;
#X obj 168 432 /~ 1536;
#X connect 0 0 7 1;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 9 0;
#X connect 4 0 9 1;
#X connect 4 0 1 0;
#X connect 4 1 6 0;
#X connect 4 1 6 1;
#X connect 4 1 0 0;
#X connect 5 0 8 0;
#X connect 6 0 10 1;
#X connect 7 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 15 0;
#X connect 12 0 19 0;
#X connect 13 0 2 1;
#X connect 14 0 12 2;
#X connect 15 0 18 0;
#X connect 16 0 5 1;
#X connect 17 0 14 0;
#X connect 18 0 12 0;
#X connect 19 0 0 1;
#X connect 19 0 1 1;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 252 pd fft;
#X text 12 72 Dynamic range compression.;
#X connect 6 0 8 1;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
