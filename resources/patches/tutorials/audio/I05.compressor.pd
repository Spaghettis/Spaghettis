#N canvas 464 85 948 788 12;
#N canvas 297 254 905 619 fft-analysis 0;
#X obj 115 409 *~;
#X obj 75 409 *~;
#X obj 76 114 *~;
#X obj 77 88 inlet~;
#X obj 76 137 rfft~;
#X obj 75 466 *~;
#X obj 171 177 *~;
#X obj 75 432 rifft~;
#X obj 75 489 outlet~;
#X obj 137 177 *~;
#X obj 137 200 +~;
#X obj 461 85 block~ 1024 4;
#X obj 137 351 clip~;
#X obj 110 114 tabreceive~ \$0-hann;
#X obj 177 329 expr 0.01*$f1*$f1;
#X obj 137 381 *~ 0.00065;
#X obj 137 225 +~ 1e-20;
#X obj 136 262 q8_rsqrt~;
#X obj 109 466 tabreceive~ \$0-hann;
#X text 31 5 As in the previous patch \, this works by multiplying each channel of the Fourier analysis by a real number computed from the magnitude. If the magnutude is "m" \, the correction factor is 1/m \, but only to an upper limit controlled by the "squelch" parameter.;
#X text 211 174 squared magnitude;
#X text 219 225 protect against divide-by-zero;
#X text 223 261 quick 8-bit-accurate reciprocal square root;
#X text 222 277 (done by table lookup - about 0.25% accurate);
#X text 193 351 limit the gain to squelch*squelch/100;
#X text 238 381 normalize for 1024-point \, overlap-4 Hann;
#X text 151 409 multiply gain by real and complex part;
#X text 152 429 of the amplitude;
#X text 130 137 outputs complex amplitudes;
#X obj 636 120 inlet;
#X connect 0 0 7 1;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 9 0;
#X connect 4 0 9 1;
#X connect 4 0 1 0;
#X connect 4 1 6 0;
#X connect 4 1 6 1;
#X connect 4 1 0 0;
#X connect 5 0 8 0;
#X connect 6 0 10 1;
#X connect 7 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 16 0;
#X connect 12 0 15 0;
#X connect 13 0 2 1;
#X connect 14 0 12 2;
#X connect 15 0 0 1;
#X connect 15 0 1 1;
#X connect 16 0 17 0;
#X connect 17 0 12 0;
#X connect 18 0 5 1;
#X connect 29 0 14 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 84 468 pd fft-analysis;
#X obj 84 612 output~;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 24 24 compressor;
#N canvas 0 22 500 350 more 0;
#X text 12 36 Here we divide each complex channel in the Fourier analysis by its own magnitude to "flatten" the spectrum. The "squelch" control limits the amplitude boost the algorithm will apply. If infinite \, you'll get a white spectrum. If less \, the louder parts of the spectrum will be flattened but the quieter ones will only be boosted by the squelch value.;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 504 216 pd more;
#X text 12 72 Dynamic range compression by Fourier analysis channel.;
#N canvas 518 208 753 316 hann 0;
#X obj 36 264 tabwrite \$0-hann;
#X obj 36 24 loadbang;
#X obj 36 132 t f f;
#N canvas 0 22 500 350 \$0-hann 0;
#X array \$0-hann 1024 float 2;
#X coords 0 1 1024 0 250 175 1 0 0;
#X restore 468 72 graph \$0-hann;
#X obj 36 60 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X obj 36 96 uzi 1024;
#X obj 144 192 expr (-cos(($f1/512)*pi)/2)+0.5;
#X connect 1 0 4 0;
#X connect 2 0 6 0;
#X connect 2 1 0 1;
#X connect 4 0 5 0;
#X connect 5 2 2 0;
#X connect 6 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 348 408 pd hann;
#X obj 264 276 nbx 5 40 0 20 0 1 empty empty empty 0 -7 0 10 #ffffff #000000 #000000 8 20;
#N canvas 790 56 650 435 play 0;
#X obj 36 312 +~ 1;
#X obj 36 36 loadbang;
#X obj 36 384 outlet~;
#X obj 36 108 soundfiler;
#X msg 36 72 read -resize bell.aiff \$0-table;
#N canvas 0 22 500 350 \$0-table 0;
#X array \$0-table 155944 float 2;
#X coords 0 1 155944 -1 250 175 1 0 0;
#X restore 360 48 graph \$0-table;
#X obj 36 144 t f f;
#X obj 108 228 phasor~;
#X obj 36 276 *~;
#X obj 108 192 expr 44100/$f1;
#X obj 36 348 tabread4~ \$0-table;
#X connect 0 0 10 0;
#X connect 1 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 6 0 9 0;
#X connect 6 1 8 1;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X connect 9 0 7 0;
#X connect 10 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 84 420 pd play;
#X connect 0 0 1 0;
#X connect 8 0 0 1;
#X connect 9 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
