#N canvas 203 66 833 646 12;
#X text 108 132 CONVERTING CONTROL TO SIGNALS;
#X obj 120 468 output~;
#X obj 204 468 output~;
#N canvas 917 80 450 300 metro 0;
#X msg 87 65 1;
#X obj 87 131 tgl 15 0 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000 1 1;
#X obj 87 153 sel 0 1;
#X obj 87 190 outlet;
#X obj 151 192 outlet;
#X obj 87 96 metro 2;
#X msg 180 72 0;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 132 360 pd metro;
#X msg 132 384 1 2;
#X msg 192 396 0 2;
#X obj 132 420 line~;
#X obj 204 432 vline~;
#X text 108 228 Here we try out line~ and vline~ as triangle wave generators. The subpatch is still sending alternating bangs as in the last patch \, but now at an audible frequency \, every 2 msec.;
#X text 108 288 The effect of line~ rounding breakpoints to the nearest block (on the order of a millisecond) is that each 4-millisecond-long cycle has a different shape. Using vline~ resolves the problem.;
#X text 108 528 Sometimes you will want to use vline~ in place of sig~ for the same reason.;
#X text 108 144 For controlling amplitudes \, line~ \, with its block-aligned breakpoints \, is accurate enough for most purposes. But certain usages \, such as this patch \, demand more accuracy. The vline~ object \, somewhat more expensive than line~ \, can handle breakpoints to sub-sample accuracy.;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 384 60 comment;
#X connect 3 0 4 0;
#X connect 3 1 5 0;
#X connect 4 0 6 0;
#X connect 4 0 7 0;
#X connect 5 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 1 0;
#X connect 7 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
