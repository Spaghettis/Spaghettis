#N canvas 395 84 655 431 12;
#X msg 36 108 1;
#X obj 120 192 + 1;
#X obj 36 144 t f f f f;
#X f 30;
#X obj 84 384 + 1;
#X obj 36 384 f;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 12 72 Control operations occurs depth first.;
#X text 24 24 overflow;
#X obj 288 264 print A;
#X obj 204 264 print B;
#X obj 120 264 print C;
#X obj 36 264 print D;
#X obj 288 192 s \$0-pipe;
#X obj 288 228 r \$0-pipe;
#N canvas 298 135 158 246 foo 0;
#X obj 36 72 + 1;
#X obj 36 108 + 1;
#X obj 36 144 + 1;
#X obj 36 36 inlet;
#X obj 36 180 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 3 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 204 192 pd foo;
#X text 12 312 It implies that (in theory) infinite loop can be mistakenly done like that.;
#X f 75;
#X obj 36 348 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#N canvas 479 78 742 437 more 0;
#X obj 36 84 f;
#X obj 96 84 + 1;
#X floatatom 84 156 5 0 0 1 - - -;
#X f 5;
#X msg 36 48 1;
#X obj 36 120 t f f;
#X text 12 12 In practice it is aborted ("stack overflow") after an arbitrary number of reentrancy.;
#X f 85;
#X obj 36 240 uzi;
#X f 4;
#X obj 36 324 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X obj 36 360 counter;
#X floatatom 36 396 5 0 0 1 - - -;
#X f 5;
#X text 12 288 And it's probably better to utilize the counter object!;
#X text 12 204 Thus use the uzi object instead of recursive algorithms.;
#X f 57;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 4 1 2 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 204 384 pd more;
#X connect 0 0 2 0;
#X connect 1 0 11 0;
#X connect 2 0 12 0;
#X connect 2 1 1 0;
#X connect 2 2 15 0;
#X connect 2 3 13 0;
#X connect 3 0 4 0;
#X connect 4 0 3 0;
#X connect 14 0 9 0;
#X connect 15 0 10 0;
#X connect 17 0 4 0;
#X coords 0 0 1 1 250 175 0 0 0;
