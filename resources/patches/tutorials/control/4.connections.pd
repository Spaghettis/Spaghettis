#N canvas 363 51 842 725 12;
#X floatatom 144 552 0 0 0 0 - - -;
#X floatatom 264 552 0 0 0 0 - - -;
#X floatatom 144 468 0 0 0 0 - - -;
#X floatatom 624 312 0 0 0 0 - - -;
#X floatatom 672 324 0 0 0 0 - - -;
#X obj 624 288 +;
#X floatatom 624 264 0 0 0 0 - - -;
#X obj 672 288 +;
#X floatatom 96 264 0 0 0 0 - - -;
#X floatatom 96 168 0 0 0 0 - - -;
#X floatatom 120 192 0 0 0 0 - - -;
#X obj 96 240 +;
#X text 72 216 hot;
#X text 120 228 cold;
#X text 300 264 Here's the downside: drag this--->;
#X text 624 336 good;
#X text 672 336 bad;
#X obj 144 528 *;
#X obj 264 528 -;
#X text 84 552 square;
#X text 300 564 first difference;
#X obj 144 492 trigger float float;
#X text 96 588 Trigger takes any number of "bang" and "float" arguments (among others) and copies its input to its outlets \, in the requested forms \, in right-to-left order. Hook it to two inputs without crossing the wires and you get the expected result. Cross the wires and you get a memory effect.;
#X text 84 288 In Pd you must sometimes think about what order an object is going to get its messages in. If an outlet is connected to more than one inlet it's undefined which inlet will get the cookie first. I've rigged this example so that the left-hand side box gets its inputs in the good \, right-to-left order \, so that the hot inlet gets hit when all the data are good. The "bad adder" happens to receive its inputs in the wrong order and is perpetually doing its addition before all the data are in. There's an object that exists solely to allow you to control message order explicitly:;
#X text 192 168 In Pd \, most objects carry out their functions when they get messages in their leftmost inlets \, and their other inlets are for storing values that can modify the next action. Here \, the "+" object does its thing only when the left-hand input changes.;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 24 24 connections;
#X connect 2 0 21 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 7 1;
#X connect 6 0 5 1;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X connect 9 0 11 0;
#X connect 10 0 11 1;
#X connect 11 0 8 0;
#X connect 17 0 0 0;
#X connect 18 0 1 0;
#X connect 21 0 17 0;
#X connect 21 0 18 1;
#X connect 21 1 17 1;
#X connect 21 1 18 0;
#X coords 0 0 1 1 250 175 0 0 0;
