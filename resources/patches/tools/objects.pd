#N canvas 767 109 498 493 12;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X text 24 24 objects;
#N canvas 550 216 542 343 gui 0;
#X text 360 84 comment;
#X floatatom 36 144 5 0 0 1 - - -;
#X f 5;
#N canvas 0 22 500 350 \$0-array 0;
#X array \$0-array 12 float 1;
#A 0 0 -0.165714 0.245715 0.142858 -0.188571 -0.600001 -0.474286 0.691431 0.760002 0 0 0;
#X coords 0 1 11 -1 250 175 1 0 0;
#X restore 264 132 graph \$0-array;
#X msg 444 84 message;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X text 24 24 GUI;
#X obj 192 156 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X obj 192 192 tgl 15 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000 0 1;
#X obj 144 132 vradio 15 1 0 8 empty empty empty 17 7 0 10 #ffffff #000000 #000000 1;
#X obj 144 84 hradio 15 1 0 8 empty empty empty 0 -7 0 10 #ffffff #000000 #000000 1;
#X obj 108 144 vslider 15 128 0 127 0 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000 0 0;
#X obj 108 288 hslider 128 15 0 127 0 0 empty empty empty 0 -7 0 10 #ffffff #000000 #000000 0 0;
#X obj 36 84 nbx 5 40 0 127 0 1 empty empty empty 0 -7 0 10 #ffffff #000000 #000000 6 127;
#X obj 36 180 vu 15 120 empty empty 17 7 0 10 #ffffff #000000 0 0;
#X connect 1 0 13 0;
#X connect 6 0 7 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 12 0 1 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 108 pd gui;
#X text 12 72 All the objects contained in this distribution.;
#N canvas 0 22 921 747 time 0;
#X obj 24 60 delay;
#X text 132 60 - send a message after a time delay;
#X obj 24 84 metro;
#X text 132 84 - send a message periodically;
#X obj 24 108 line;
#X text 132 108 - send a series of linearly stepped numbers;
#X obj 24 132 timer;
#X text 132 132 - measure time intervals;
#X obj 24 156 cputime;
#X text 132 156 - measure CPU time;
#X obj 24 180 realtime;
#X text 132 180 - measure real time;
#X obj 24 204 pipe;
#X text 132 204 - dynamically growable delay line for numbers;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 180 pd time;
#N canvas 0 22 932 778 math 0;
#X text 240 300 - arithmetic;
#X text 240 324 - relational tests;
#X text 288 348 - bit twiddling;
#X obj 48 372 mtof;
#X obj 48 396 ftom;
#X obj 96 372 powtodb;
#X obj 156 372 rmstodb;
#X obj 96 396 dbtopow;
#X obj 156 396 dbtorms;
#X text 240 384 - convert acoustical units;
#X obj 48 420 mod;
#X obj 84 420 div;
#X obj 108 420 sin;
#X obj 144 420 cos;
#X obj 180 420 tan;
#X obj 48 444 atan;
#X obj 96 444 atan2;
#X obj 144 444 sqrt;
#X obj 180 444 log;
#X obj 216 444 exp;
#X obj 240 444 abs;
#X text 288 432 - higher math;
#X obj 48 456 random;
#X text 156 456 - lower math;
#X obj 48 480 max;
#X obj 84 480 min;
#X text 156 480 - greater or lesser of 2 numbers;
#X obj 48 504 clip;
#X text 156 504 - force a number into a range;
#X obj 48 324 ==;
#X obj 84 324 !=;
#X obj 120 324 >;
#X obj 144 324 <;
#X obj 180 324 >=;
#X obj 204 324 <=;
#X obj 84 300 -;
#X obj 120 300 *;
#X obj 144 300 /;
#X obj 180 300 pow;
#X obj 48 300 +;
#X obj 48 348 &;
#X obj 84 348 &&;
#X obj 120 348 |;
#X obj 144 348 ||;
#X obj 180 348 %;
#X obj 48 528 wrap;
#X text 156 528 - wrap a number to range [0 \, 1);
#X obj 204 348 <<;
#X obj 240 348 >>;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 204 pd math;
#N canvas 0 22 982 842 midi 0;
#X obj 48 552 notein;
#X obj 108 552 ctlin;
#X obj 168 552 pgmin;
#X obj 216 552 bendin;
#X obj 276 552 touchin;
#X obj 48 576 polytouchin;
#X obj 156 576 midiin;
#X obj 216 576 sysexin;
#X text 360 564 - MIDI input;
#X obj 48 612 noteout;
#X obj 120 612 ctlout;
#X obj 180 612 pgmout;
#X obj 240 612 bendout;
#X obj 48 636 touchout;
#X obj 132 636 polytouchout;
#X obj 240 636 midiout;
#X text 348 624 - MIDI output;
#X obj 48 660 makenote;
#X obj 48 684 stripnote;
#X text 144 684 - strip "note off" messages;
#X text 144 660 - schedule delayed "note off" message for a note-on;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 228 pd midi;
#N canvas 0 22 931 730 osc 0;
#X obj 60 828 oscparse;
#X obj 60 852 oscformat;
#X text 156 840 - OSC messages to Pd lists;
#X text 156 852 - Pd lists to OSC messages;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 252 pd osc;
#N canvas 0 22 847 783 array 0;
#X obj 48 1368 tabread;
#X text 144 1368 - read a number from a table;
#X obj 48 1392 tabread4;
#X text 144 1392 - read a number from a table;
#X obj 48 1416 tabwrite;
#X text 144 1416 - write a number to a table;
#X obj 48 1440 soundfiler;
#X text 144 1440 - read and write tables to soundfiles;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 276 pd array;
#N canvas 0 22 649 543 miscellaneous 0;
#X obj 48 1548 loadbang;
#X text 144 1548 - bang on load;
#X obj 48 1608 netsend;
#X text 144 1608 - send messages over the internet;
#X obj 48 1632 netreceive;
#X text 144 1632 - receive them;
#X obj 48 1656 qlist;
#X text 144 1656 - message sequencer;
#X text 144 1680 - file to message converter;
#X obj 48 1740 openpanel;
#X text 144 1740 - "Open" dialog;
#X obj 48 1764 savepanel;
#X text 144 1764 - "Save as" dialog;
#X obj 48 1800 bag;
#X text 144 1800 - set of numbers;
#X obj 48 1824 poly;
#X text 144 1824 - polyphonic voice allocation;
#X obj 48 1860 key;
#X obj 72 1860 keyup;
#X text 144 1860 - numeric key values from keyboard;
#X obj 48 1884 keyname;
#X text 144 1884 - symbolic key name;
#X text 144 1704 - general text handling;
#X obj 48 1680 textfile;
#X obj 48 1704 text;
#X obj 36 1920 freeze;
#X obj 72 1572 makefilename;
#X obj 60 1452 print;
#X text 168 1452 - print out messages;
#X obj 252 1500 samplerate;
#X obj 420 1476 dspstatus;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 300 pd miscellaneous;
#N canvas 0 22 596 488 math~ 0;
#X text 168 1968 - arithmetic on audio signals;
#X text 144 2004 - maximum or minimum of 2 inputs;
#X obj 48 2028 clip~;
#X text 144 2028 - constrict signal to lie between two bounds;
#X obj 48 2064 q8_rsqrt~;
#X text 144 2064 - cheap reciprocal square root (beware -- 8 bits!);
#X obj 48 2088 q8_sqrt~;
#X text 144 2088 - cheap square root (beware -- 8 bits!);
#X obj 48 2136 wrap~;
#X obj 48 2160 fft~;
#X text 144 2160 - complex forward discrete Fourier transform;
#X obj 48 2184 ifft~;
#X text 144 2184 - complex inverse discrete Fourier transform;
#X obj 48 2208 rfft~;
#X text 144 2208 - real forward discrete Fourier transform;
#X obj 48 2232 rifft~;
#X text 144 2232 - real inverse discrete Fourier transform;
#X obj 48 2292 framp~;
#X text 144 2292 - output a ramp for each block;
#X obj 48 2316 mtof~;
#X obj 96 2316 ftom~;
#X obj 144 2316 rmstodb~;
#X obj 228 2316 dbtorms~;
#X text 300 2316 - acoustic conversions;
#X obj 84 2004 min~;
#X obj 48 2004 max~;
#X obj 48 1968 +~;
#X obj 72 1968 -~;
#X obj 108 1968 *~;
#X obj 144 1968 /~;
#X text 144 2136 - wraparound (fractional part);
#X obj 48 2268 pow~;
#X obj 84 2268 log~;
#X obj 132 2268 exp~;
#X text 228 2268 - math;
#X obj 180 2268 abs~;
#X obj 48 2100 sqrt~;
#X text 144 2112 - proper square root;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 444 pd math~;
#N canvas 0 22 542 509 general~ 0;
#X obj 48 2376 dac~;
#X text 144 2376 - audio output;
#X obj 48 2400 adc~;
#X text 144 2400 - audio input;
#X obj 48 2424 sig~;
#X text 144 2424 - convert numbers to audio signals;
#X obj 48 2448 line~;
#X text 144 2448 - generate audio ramps;
#X obj 48 2472 vline~;
#X text 144 2472 - deluxe line~;
#X obj 48 2520 snapshot~;
#X text 144 2520 - sample a signal (convert it back to a number);
#X obj 48 2544 vsnapshot~;
#X text 144 2544 - deluxe snapshot~;
#X obj 48 2568 bang~;
#X text 144 2568 - send a bang message after each DSP block;
#X obj 48 2616 send~;
#X text 144 2616 - nonlocal signal connection with fanout;
#X obj 48 2640 receive~;
#X text 144 2640 - get signal from send~;
#X obj 48 2664 throw~;
#X text 144 2664 - add to a summing bus;
#X obj 48 2688 catch~;
#X text 144 2688 - define and read a summing bus;
#X obj 48 2712 block~;
#X text 144 2712 - specify block size and overlap;
#X obj 48 2736 switch~;
#X text 144 2736 - switch DSP computation on and off;
#X obj 48 2760 readsf~;
#X text 144 2760 - soundfile playback from disk;
#X obj 48 2784 writesf~;
#X text 144 2784 - record sound to disk;
#X obj 48 2496 threshold~;
#X text 144 2496 - detect signal thresholds;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 348 pd general~;
#N canvas 458 29 828 770 oscillators~ 0;
#X obj 36 2844 phasor~;
#X text 144 2844 - sawtooth oscillator;
#X obj 36 2868 cos~;
#X text 144 2868 - cosine;
#X obj 36 2892 osc~;
#X text 144 2892 - cosine oscillator;
#X obj 36 2916 tabwrite~;
#X text 144 2916 - write to a table;
#X obj 36 2940 tabplay~;
#X text 144 2940 - play back from a table (non-transposing);
#X obj 36 2964 tabread~;
#X text 144 2964 - non-interpolating table read;
#X obj 36 2988 tabread4~;
#X text 144 2988 - four-point interpolating table read;
#X obj 36 3012 tabosc4~;
#X text 144 3012 - wavetable oscillator;
#X obj 36 3036 tabsend~;
#X text 144 3036 - write one block continuously to a table;
#X obj 36 3060 tabreceive~;
#X text 144 3060 - read one block continuously from a table;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 396 pd oscillators~;
#N canvas 0 22 687 570 filters~ 0;
#X obj 36 3132 vcf~;
#X text 144 3132 - voltage controlled filter;
#X obj 36 3156 noise~;
#X text 144 3156 - white noise generator;
#X obj 36 3180 env~;
#X text 144 3180 - envelope follower;
#X obj 36 3204 hip~;
#X text 144 3204 - high pass filter;
#X obj 36 3228 lop~;
#X text 144 3228 - low pass filter;
#X obj 36 3252 bp~;
#X text 144 3252 - band pass filter;
#X obj 36 3276 biquad~;
#X text 144 3276 - raw filter;
#X obj 36 3300 samphold~;
#X text 144 3300 - sample and hold unit;
#X obj 36 3324 print~;
#X text 144 3324 - print out one or more "blocks";
#X obj 36 3348 rpole~;
#X text 144 3348 - raw real-valued one-pole filter;
#X obj 36 3372 rzero~;
#X text 144 3372 - raw real-valued one-zero filter;
#X obj 36 3396 rzero_rev~;
#X text 144 3396 - time-reversed;
#X obj 36 3420 cpole~;
#X obj 96 3420 czero~;
#X text 240 3420 - corresponding complex-valued filters;
#X obj 156 3420 czero_rev~;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 420 pd filters~;
#N canvas 0 22 500 350 time~ 0;
#X obj 36 3480 delwrite~;
#X text 144 3480 - write to a delay line;
#X obj 36 3504 delread~;
#X text 144 3504 - read from a delay line;
#X obj 36 3528 vd~;
#X text 144 3528 - read from a delay line at a variable delay time;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 372 pd time~;
#N canvas 0 22 500 350 templates 0;
#X obj 36 3768 struct;
#X text 144 3768 - define a data structure;
#X obj 36 3792 drawcurve;
#X obj 132 3792 filledcurve;
#X text 240 3792 - draw a curve;
#X obj 36 3816 drawpolygon;
#X obj 144 3816 filledpolygon;
#X text 276 3816 - draw a polygon;
#X obj 36 3840 plot;
#X text 144 3840 - plot an array field;
#X obj 36 3864 drawnumber;
#X text 144 3864 - print a numeric value;
#X obj 36 3924 pointer;
#X text 144 3924 - point to an object belonging to a template;
#X obj 36 3948 get;
#X text 144 3948 - get numeric fields;
#X obj 36 3972 set;
#X text 144 3972 - change numeric fields;
#X obj 36 3996 element;
#X text 144 3996 - get an array element;
#X obj 36 4020 getsize;
#X text 144 4020 - get the size of an array;
#X obj 36 4044 setsize;
#X text 144 4044 - change the size of an array;
#X obj 36 4068 append;
#X text 144 4068 - add an element to a list;
#X text 36 3744 ---------------------- DATA TEMPLATES ----------------------;
#X text 36 3900 ---------------------- ACCESSING DATA ----------------------;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 324 pd templates;
#N canvas 309 154 583 611 flow 0;
#X obj 36 84 bang;
#X obj 36 108 float;
#X obj 36 132 symbol;
#X obj 36 156 int;
#X obj 36 180 send;
#X obj 36 204 receive;
#X obj 36 252 select;
#X obj 36 276 route;
#X obj 36 300 pack;
#X obj 36 348 unpack;
#X obj 36 372 trigger;
#X obj 36 396 spigot;
#X obj 36 420 moses;
#X obj 36 444 until;
#X obj 36 492 change;
#X obj 36 516 swap;
#X obj 36 228 value;
#X obj 36 564 list;
#X obj 36 468 uzi;
#X obj 36 540 prepend;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X text 24 24 flow (aka glue);
#X text 168 84 Output a "bang" message.;
#X text 168 108 Store and recall a number.;
#X text 168 132 Store and recall a symbol.;
#X text 168 156 Store and recall an integer.;
#X text 168 180 Send a message to a named object.;
#X text 168 204 Catch sent messages.;
#X text 168 252 Test for matching numbers or symbols.;
#X text 168 276 Route messages according to first element.;
#X text 168 300 Make compound messages.;
#X text 168 348 Get elements of compound messages.;
#X obj 36 324 pak;
#X text 168 324 Alternate version with all the inlets hot.;
#X text 168 372 Convert and trigger from right to left.;
#X text 168 396 Pass or block messages.;
#X f 23;
#X text 168 420 Part a numeric stream.;
#X text 168 444 Bang until stopped.;
#X text 168 468 Bang a given number of times.;
#X text 168 492 Remove repeated numbers from a stream.;
#X text 168 516 Swap two numbers.;
#X text 168 228 Shared numeric value.;
#X text 168 540 Prepend something to make a message.;
#X text 168 564 Manipulate lists.;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 156 pd flow;
#N canvas 282 159 430 250 subpatch 0;
#N canvas 0 50 450 300 Patch 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 84 pd;
#X obj 36 132 inlet;
#X obj 36 156 outlet;
#X obj 36 180 inlet~;
#X obj 36 204 outlet~;
#X obj 36 108 namecanvas;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X text 24 24 subpatch;
#X text 168 84 Define a subpatch.;
#X text 168 108 Attach a window to it.;
#X text 168 132 Add an inlet.;
#X text 168 156 Add an outlet.;
#X text 168 180 Add a signal inlet.;
#X text 168 204 Add a signal outlet.;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 132 pd subpatch;
#X coords 0 0 1 1 250 175 0 0 0;
