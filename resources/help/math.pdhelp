#N canvas 615 107 548 352 12;
#N canvas 679 215 649 427 more 0;
#X floatatom 48 60 5 -100 0 1 - - -;
#X f 5;
#X obj 48 132 print;
#X obj 48 96 pow 2;
#X text 12 12 Note that a power for a negative entry gives zero.;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 228 pd more;
#X text 12 312 See also:;
#X obj 96 312 expr;
#X obj 144 312 &&;
#X obj 180 312 ||;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 24 24 math;
#X text 12 72 Mathematical functions.;
#N canvas 499 96 711 639 trigonometric 0;
#X obj 48 240 sin;
#X floatatom 48 96 0 0 360 0 - - -;
#X obj 48 168 * 6.28319;
#X obj 48 132 / 360;
#X obj 144 240 cos;
#X obj 240 240 tan;
#X floatatom 300 456 0 0 0 0 - - -;
#X floatatom 240 540 0 0 0 0 - - -;
#X floatatom 240 456 0 0 0 0 - - -;
#X floatatom 132 516 0 0 0 0 - - -;
#X floatatom 132 456 0 0 0 0 - - -;
#X obj 132 480 atan;
#X obj 240 480 float;
#X obj 300 480 t b f;
#X obj 240 504 atan2;
#X text 36 336 The arc tangent takes two forms. The atan2 version takes an (x \, y) pair and gives you an output between -pi and pi.;
#X text 12 12 Trigonometric functions take inputs in radians.;
#X obj 48 60 hslider 128 15 0 360 0 0 empty empty empty 0 -7 0 10 #ffffff #000000 #000000 2600 0;
#X obj 48 276 print sin;
#X obj 144 276 print cos;
#X obj 240 276 print tan;
#X connect 0 0 18 0;
#X connect 1 0 3 0;
#X connect 2 0 0 0;
#X connect 2 0 4 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 19 0;
#X connect 5 0 20 0;
#X connect 6 0 13 0;
#X connect 8 0 12 0;
#X connect 10 0 11 0;
#X connect 11 0 9 0;
#X connect 12 0 14 0;
#X connect 13 0 12 0;
#X connect 13 1 14 1;
#X connect 14 0 7 0;
#X connect 17 0 1 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 108 pd trigonometric;
#N canvas 246 55 1034 619 transcendental 0;
#X floatatom 96 84 0 0 0 0 - - -;
#X floatatom 96 24 0 0 0 0 - - -;
#X floatatom 36 84 0 0 0 0 - - -;
#X floatatom 36 24 0 0 0 0 - - -;
#X obj 36 48 log;
#X obj 96 48 exp;
#X connect 1 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 132 pd transcendental;
#N canvas 0 22 836 471 power 0;
#X floatatom 348 96 0 0 0 0 - - -;
#X floatatom 348 36 0 0 0 0 - - -;
#X obj 348 60 sqrt;
#X obj 12 84 pow 2;
#X obj 12 120 print;
#X obj 108 84 pow 0.5;
#X obj 108 120 print;
#X obj 216 120 print;
#X msg 216 36 1 \, 2 \, 3 \, 4;
#X obj 216 84 pow -1;
#X msg 12 36 2 \, 3 \, 4;
#X msg 108 36 4 \, 9 \, 16;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 10 0 3 0;
#X connect 11 0 5 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 156 pd power;
#N canvas 0 22 1118 649 miscellaneous 0;
#X floatatom 564 132 0 0 0 0 - - -;
#X floatatom 564 72 0 0 0 0 - - -;
#X obj 564 96 abs;
#X floatatom 480 120 0 0 0 0 - - -;
#X floatatom 480 60 0 0 0 0 - - -;
#X obj 480 84 wrap;
#X text 48 156 also \, square root \, natural logarithm and exponential \, and absolute value. The "wrap" object wraps the input to a value between 0 and 1 (including negative numbers. For instance \, -0.2 maps to 0.8.);
#X floatatom 624 168 5 0 0 1 - - -;
#X f 5;
#X floatatom 684 168 5 0 0 1 - - -;
#X f 5;
#X obj 624 120 min 0;
#X f 5;
#X obj 684 120 max 0;
#X floatatom 624 12 5 0 0 1 - - -;
#X f 5;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X connect 9 0 7 0;
#X connect 10 0 8 0;
#X connect 11 0 9 0;
#X connect 11 0 10 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 204 pd miscellaneous;
#N canvas 0 22 1152 735 modulo 0;
#X floatatom 144 204 0 0 0 0 - - -;
#X floatatom 96 204 0 0 0 0 - - -;
#X floatatom 96 96 0 0 0 0 - - -;
#X floatatom 144 96 0 0 0 0 - - -;
#X obj 144 132 t b f;
#X obj 96 132 f;
#X obj 96 168 div;
#X obj 144 168 mod;
#X text 96 288 div and mod do integer division. div outputs the integer quotient and mod outputs the remainder (modulus). In addition the "%" operator (provided for back compatibility) is like "mod" but acts differently for negative inputs (and might act variously depending on CPU design).;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 4 1 6 1;
#X connect 4 1 7 1;
#X connect 5 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 1 0;
#X connect 7 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 180 pd modulo;
#X obj 216 312 <<;
#X obj 252 312 >>;
#X obj 288 312 +;
#X obj 324 312 *;
#X text 216 108 Functions: sin \, cos \, tan \, atan.;
#X text 216 132 Functions: log \, exp.;
#X text 216 156 Functions: pow \, sqrt.;
#X text 216 180 Functions: % \, mod \, div.;
#X text 216 204 Functions: min \, max \, abs \, wrap.;
#X text 12 276 < https://docs.python.org/3/tutorial/floatingpoint.html >.;
#X f 58;
#X coords 0 0 1 1 250 175 0 0 0;
