#N canvas 462 318 647 400 12;
#X obj 36 228 soundfiler;
#X obj 96 360 tabplay~;
#X obj 252 360 writesf~;
#X obj 180 360 readsf~;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 24 24 soundfiler;
#X text 12 72 Read and write soundfiles from and to arrays.;
#N canvas 12 50 921 441 more 0;
#X obj 36 360 soundfiler;
#X obj 36 396 print frames;
#X msg 36 48 read -skip 4410 voice.wav \$0-channel2;
#X msg 36 72 read -frames 44100 voice.wav \$0-channel2;
#X msg 36 24 read you.aiff \$0-channel1 \$0-channel2;
#X text 528 24 Read an audio sample with multiple channels.;
#X text 528 48 Skip a given number of samples at start.;
#X text 528 72 Specify the number of frames required.;
#X msg 60 108 write /tmp/lalala.aiff \$0-channel1 \$0-channel2;
#X msg 60 132 write -skip 22050 /tmp/lalala.aiff \$0-channel1;
#X msg 60 156 write -frames 22050 /tmp/lalala.aiff \$0-channel1;
#X msg 60 180 write -wave /tmp/lalala \$0-channel1;
#X msg 60 204 write -aiff /tmp/lalala \$0-channel1;
#X msg 60 228 write -nextstep /tmp/lalala \$0-channel1;
#X msg 60 300 write -wave -bytes 3 /tmp/lalala \$0-channel1;
#X msg 60 276 write -samplerate 22050 /tmp/lalala.aiff \$0-channel1;
#X msg 60 252 write -normalize /tmp/lalala.aiff \$0-channel1;
#X text 528 108 Write an audio sample with multiple channels.;
#X text 528 132 Skip a given number of samples at start.;
#X text 528 156 Specify the number of frames required.;
#X text 528 180 Write as WAVE.;
#X text 528 204 Write as AIFF.;
#X text 528 228 Write as NeXTStep.;
#X text 528 300 Write with 24-bit resolution.;
#X text 528 252 Normalize the amplitude of the sample.;
#X text 528 276 Define the samplerate of the file.;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 168 288 pd more;
#X text 12 360 See also:;
#N canvas 0 22 500 350 \$0-channel1 0;
#X array \$0-channel1 34475 float 2;
#X coords 0 1 34475 -1 250 95 1 0 0;
#X restore 372 120 graph \$0-channel1;
#N canvas 375 299 270 185 init 0;
#X obj 36 24 inlet;
#X msg 36 72 resize 4410 \, constant 0;
#X obj 36 108 s \$0-channel1;
#X obj 36 132 s \$0-channel2;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 312 pd init;
#X obj 36 276 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#N canvas 0 22 500 350 \$0-channel2 0;
#X array \$0-channel2 44100 float 2;
#X coords 0 1 44100 -1 250 95 1 0 0;
#X restore 372 240 graph \$0-channel2;
#X msg 36 108 read bell.aiff \$0-channel1;
#X msg 36 132 read -resize voice.wav \$0-channel2;
#X msg 36 156 write /tmp/lalala.aiff \$0-channel2;
#N canvas 365 481 548 167 formats 0;
#X text 12 84 Note that 2-3 bytes per sample is assumed LPCM.;
#X text 12 108 Likewise \, 4 bytes per sample is assumed 32-bit IEEE float.;
#X text 12 12 AIFF \, WAVE and NeXTStep formats are supported.;
#X text 12 132 Unsupported sub-chunks are not preserved at save.;
#X text 12 36 But only uncompressed 16-bit \, 24-bit integer and 32-bit float.;
#X f 63;
#X text 12 60 Mu-law \, A-law and such are NOT handled.;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 168 312 pd formats;
#X connect 12 0 11 0;
#X connect 14 0 0 0;
#X connect 15 0 0 0;
#X connect 16 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
