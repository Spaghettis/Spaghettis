#N canvas 539 136 619 474 12;
#X obj 96 432 get;
#X obj 132 432 set;
#X obj 240 432 getsize;
#X obj 312 432 setsize;
#X obj 444 432 element;
#X obj 24 132 pointer;
#X obj 168 432 pointer;
#X obj 384 432 struct;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X text 24 24 append;
#X text 12 432 See also:;
#X obj -60 12 freeze;
#N canvas 138 421 335 326 \$0-data 1;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 24 348 pd \$0-data;
#N canvas 782 245 444 115 \$0-template 0;
#X obj 24 60 struct \$0-template float x float y float z;
#X obj 24 24 drawnumber z x y;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 24 372 pd \$0-template;
#N canvas 629 460 519 286 set 0;
#X obj 204 108 pointer;
#X obj 24 228 append;
#X f 13;
#X text 24 24 If there is just one field \, you can use a "set" message.;
#X msg 24 72 set \$0-template x;
#X msg 204 72 traverse \$0-data \, bang;
#X obj 48 156 random 150;
#X obj 48 120 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X connect 0 0 1 1;
#X connect 3 0 1 0;
#X connect 4 0 0 0;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 192 372 pd set;
#X msg 24 96 traverse \$0-data \, bang;
#X obj 24 288 append \$0-template x y z;
#X f 24;
#X obj 24 252 random;
#X msg 24 216 3 150;
#X text 252 96 First output "head" of the scalars list.;
#X text 180 216 Then append a scalar randomly initialized.;
#X connect 5 0 16 3;
#X connect 15 0 5 0;
#X connect 17 0 16 0;
#X connect 18 0 17 0;
#X coords 0 0 1 1 250 175 0 0 0;
