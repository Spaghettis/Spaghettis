#N canvas 459 103 585 429 12;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X text 24 24 expr;
#X floatatom 204 108 0 0 0 0 - - -;
#X obj 36 144 expr 2 + 3;
#X msg 36 108 bang;
#X floatatom 36 180 0 0 0 0 - - -;
#X floatatom 204 180 0 0 0 0 - - -;
#X floatatom 384 180 0 0 0 0 - - -;
#X text 12 72 Evaluation engine for math expressions.;
#N canvas 278 118 888 561 more 0;
#X obj 36 480 expr fac($f1);
#X msg 36 432 5;
#X floatatom 36 516 5 0 0 1 - - -;
#X f 5;
#X obj 36 96 expr 0.141*exp(-0.5*((($f1-50)/4)^2));
#X floatatom 36 48 5 0 100 1 - - -;
#X f 5;
#X floatatom 36 132 0 0 0 1 - - -;
#X obj 204 480 expr npr($f1 \, $f2);
#X floatatom 204 516 5 0 0 1 - - -;
#X f 5;
#X msg 204 432 6 2;
#X floatatom 408 516 5 0 0 1 - - -;
#X f 5;
#X msg 408 432 6 2;
#X obj 408 480 expr ncr($f1 \, $f2);
#X obj 36 264 expr ($f1/180)*pi;
#X floatatom 36 216 5 0 360 1 - - -;
#X f 5;
#X floatatom 36 288 0 0 0 1 - - -;
#X obj 36 312 expr ($f1/pi)*180;
#X floatatom 36 348 5 0 0 1 - - -;
#X f 5;
#X text 12 180 Note that those constants are available: "pi" \, "e".;
#X f 51;
#X text 12 396 Supported as well: fac (factorials) \, ncr (combinations) \, npr (permutations).;
#X f 76;
#X text 12 12 Abs \, acos \, asin \, atan \, atan2 \, ceil \, cos \, cosh \, exp \, floor \, ln \, log10 \, pow \, sin \, sinh \, sqrt \, tan \, tanh.;
#X f 102;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 6 0 7 0;
#X connect 8 0 6 0;
#X connect 10 0 11 0;
#X connect 11 0 9 0;
#X connect 12 0 14 0;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 384 228 pd more;
#X obj 204 144 expr 2 + $f1;
#X obj 36 300 expr $f1 % $f2;
#X obj 36 264 pack f 10;
#X floatatom 36 228 5 0 0 1 - - -;
#X f 5;
#X floatatom 36 336 5 0 0 1 - - -;
#X f 5;
#X msg 384 108 3 4;
#X obj 384 144 expr $f1 * ($f2 + 2);
#X floatatom 204 336 5 0 0 1 - - -;
#X f 5;
#X msg 204 228 9;
#X obj 204 300 expr $f1 ^ 0.5;
#X text 12 384 See also:;
#X obj 96 384 +;
#X obj 132 384 pow;
#X obj 168 384 &;
#X obj 204 384 >;
#N canvas 427 121 635 616 again 0;
#X obj 36 48 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X obj 36 84 expr rand()*pi;
#X f 16;
#X obj 252 300 expr min($f1 \, $f2);
#X obj 36 120 print;
#X obj 252 324 expr max($f1 \, $f2);
#X obj 36 300 expr eq($f1 \, $f2);
#X obj 36 324 expr ne($f1 \, $f2);
#X obj 36 348 expr lt($f1 \, $f2);
#X obj 36 372 expr le($f1 \, $f2);
#X obj 36 420 expr gt($f1 \, $f2);
#X obj 36 396 expr ge($f1 \, $f2);
#X msg 252 204 7 11;
#X obj 252 360 print;
#X text 12 168 Classic comparaison operators.;
#X floatatom 36 204 5 0 0 1 - - -;
#X f 5;
#X floatatom 108 204 5 0 0 1 - - -;
#X f 5;
#X obj 36 264 pak;
#X obj 36 456 tgl 15 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000 0 1;
#X obj 36 480 tgl 15 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000 0 1;
#X obj 36 504 tgl 15 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000 0 1;
#X obj 36 528 tgl 15 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000 0 1;
#X obj 36 576 tgl 15 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000 0 1;
#X obj 36 552 tgl 15 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000 0 1;
#X obj 252 120 print;
#X obj 252 48 bng 15 250 50 0 empty empty empty 0 0 0 10 #ffffff #000000 #000000;
#X obj 252 84 expr randmt();
#X f 13;
#X text 12 12 Random functions available (range is from '0' included to '1' excluded).;
#X f 72;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 12 0;
#X connect 4 0 12 0;
#X connect 5 0 17 0;
#X connect 6 0 18 0;
#X connect 7 0 19 0;
#X connect 8 0 20 0;
#X connect 9 0 21 0;
#X connect 10 0 22 0;
#X connect 11 0 2 0;
#X connect 11 0 4 0;
#X connect 14 0 16 0;
#X connect 15 0 16 1;
#X connect 16 0 5 0;
#X connect 16 0 6 0;
#X connect 16 0 7 0;
#X connect 16 0 8 0;
#X connect 16 0 9 0;
#X connect 16 0 10 0;
#X connect 24 0 25 0;
#X connect 25 0 23 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 384 252 pd again;
#N canvas 866 251 418 369 vexpr 0;
#X obj 36 96 vexpr rand()*$f1;
#X msg 36 48 10 1 1000;
#X obj 36 132 print;
#X text 12 12 Evaluate lists in one shot with vexpr version.;
#X obj 36 288 vexpr $f1^$f2;
#X msg 168 252 2;
#X obj 36 324 print;
#X msg 36 180 1 2 3 4;
#X obj 60 252 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X msg 36 204 5 6 7;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 7 0 4 0;
#X connect 8 0 4 0;
#X connect 9 0 4 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 384 276 pd vexpr;
#N canvas 328 205 704 48 credits 0;
#X text 12 12 Based on TinyExpr from Lewis Van Winkle < https://github.com/codeplea/tinyexpr >.;
#X f 81;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 384 324 pd credits;
#N canvas 611 188 357 307 zero 0;
#X obj 36 96 expr $f1/$f2;
#X obj 36 132 print;
#X msg 36 48 1 0;
#X obj 36 228 expr sqrt($f1);
#X msg 36 180 -4;
#X obj 36 264 print;
#X text 12 12 Divide by zero (and friends) give zero.;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 384 300 pd zero;
#X connect 2 0 10 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 10 0 6 0;
#X connect 11 0 14 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 15 0 16 0;
#X connect 16 0 7 0;
#X connect 18 0 19 0;
#X connect 19 0 17 0;
#X coords 0 0 1 1 250 175 0 0 0;
