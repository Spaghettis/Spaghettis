#N canvas 370 209 778 366 12;
#X obj 96 324 lop~;
#X obj 204 324 rzero~;
#X obj 144 324 cpole~;
#X obj 36 108 rpole~ 0.9;
#X text 12 168 y[n] = x[n] + a[n] * y[n-1];
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 24 24 rpole~;
#X text 12 72 Real One-Pole filter.;
#X text 12 324 See also:;
#X text 12 288 < https://ccrma.stanford.edu/~jos/filters/One_Pole.html >;
#N canvas 179 27 567 324 more 0;
#X msg 72 216 clear;
#X msg 36 180 set 1;
#X text 12 12 Notice that a[n] (the filter coefficient) can be also a signal.;
#X f 63;
#X obj 36 96 rpole~ 0.9;
#X obj 132 48 sig~ 0.9;
#X obj 36 48 noise~;
#X text 12 144 Set (or clear) the internal state.;
#X obj 36 276 rpole~ 0.9;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 4 0 3 1;
#X connect 5 0 3 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 240 pd more;
#X text 12 144 It calculates the following difference equation:;
#X f 48;
#X text 12 204 WARNING: coefficients are not constrained. Bad ones could cause DAMAGES to your hardware.;
#X f 89;
#X coords 0 0 1 1 250 175 0 0 0;
