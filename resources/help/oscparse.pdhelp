#N canvas 461 73 464 441 12;
#X obj 36 312 oscparse;
#X obj 96 396 oscformat;
#X obj 180 396 netreceive;
#X msg 36 132 1 2 3 foo 5;
#X obj 36 156 oscformat dog cat;
#X text 12 396 See also:;
#X obj -60 12 freeze;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X text 12 72 Parse OSC packets into messages.;
#X f 33;
#X text 12 96 < http://opensoundcontrol.org/introduction-osc >.;
#X text 24 24 oscparse;
#N canvas 663 103 579 225 more 0;
#X text 12 84 OSC messages may contain 'float' \, 'int' \, 'string' \, or 'blob' elements. Blobs are arrays of bytes and are copied to the output preceded by the blob's byte count.;
#X f 67;
#X text 12 12 This object takes incoming lists of numbers \, interpreting them as the bytes of an OSC message. The output is a list containing \, first \, the symbols making up the address of the OSC packet \, and following that \, numbers and symbols as present in the OSC message.;
#X f 67;
#X text 12 144 For now there's no attempt to deal with timetags or aggregates of packets \, nor with streaming OSC. If it receives a bundle it simply parses all the messages in the order they appear.;
#X f 67;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 144 312 pd more;
#X obj 36 348 print;
#X obj 36 180 prepend set;
#X msg 36 228 47 100 111 103 47 99 97 116 0 0 0 0 44 102 102 102 115 102 0 0 63 128 0 0 64 0 0 0 64 64 0 0 102 111 111 0 64 160 0 0;
#X f 40;
#X connect 0 0 12 0;
#X connect 3 0 4 0;
#X connect 4 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
