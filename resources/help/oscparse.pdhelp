#N canvas 769 172 376 424 12;
#X obj 36 276 oscparse;
#X obj 96 384 oscformat;
#X obj 180 384 netreceive;
#X msg 36 108 1 2 3 foo 5;
#X obj 36 132 oscformat dog cat;
#X text 12 384 See also:;
#X obj -60 12 freeze;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X text 12 72 Parse OSC packets into messages.;
#X f 33;
#X text 12 348 < http://opensoundcontrol.org/introduction-osc >;
#X text 24 24 oscparse;
#N canvas 417 325 707 191 more 0;
#X text 12 12 This object takes incoming lists of numbers \, interpreting them as the bytes of an OSC message.;
#X f 94;
#X text 12 36 The output is a list containing \, first \, the symbols making up the address of the OSC packet.;
#X f 93;
#X text 12 60 Then numbers and symbols (as present in the OSC message) are following.;
#X f 71;
#X text 12 84 OSC messages may contain float \, int \, strin' \, or blob elements.;
#X f 63;
#X text 12 108 Blobs are arrays of bytes and are copied to the output preceded by the blob's byte count.;
#X f 89;
#X text 12 156 If it receives a bundle it simply parses all the messages in the order they appear.;
#X f 83;
#X text 12 132 For now there's no attempt to deal with timetags or aggregates of packets.;
#X f 74;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 192 276 pd more;
#X obj 36 312 print;
#X obj 36 156 prepend set;
#X msg 36 204 47 100 111 103 47 99 97 116 0 0 0 0 44 102 102 102 115 102 0 0 63 128 0 0 64 0 0 0 64 64 0 0 102 111 111 0 64 160 0 0;
#X f 40;
#X connect 0 0 12 0;
#X connect 3 0 4 0;
#X connect 4 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
