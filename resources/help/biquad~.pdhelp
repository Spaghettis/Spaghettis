#N canvas 416 108 801 560 12;
#X obj 12 12 cnv 15 250 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 24 24 biquad~;
#X obj 156 444 env~;
#X obj 36 444 env~;
#X obj 156 396 biquad~ 1.41407 -0.9998 1 -1.41421 1;
#X obj 36 336 osc~ 5512.5;
#X obj 36 228 nbx 5 40 0 1 0 0 empty empty empty 0 -7 0 10 #ffffff #000000 #000000 0 100;
#X obj 36 288 + 5512;
#X floatatom 36 480 5 0 0 1 - - -;
#X f 5;
#X floatatom 156 480 5 0 0 1 - - -;
#X f 5;
#X text 228 444 Notch filter at '5512.5' Hz (with SR of '44.1' kHz).;
#X f 99;
#X text 492 396 Coefficients: a1 a2 b0 b1 b2;
#X text 12 108 It calculates the following difference equation:;
#X f 48;
#X text 12 72 Two-Pole Two-Zero filter (Direct Form II with additions only).;
#X f 63;
#X obj 156 336 r \$0-biquad;
#N canvas 415 422 434 179 more 0;
#X msg 108 24 set 0 0;
#X msg 36 24 clear;
#X obj 36 132 s \$0-biquad;
#X text 192 24 Clear the internal states.;
#X connect 0 0 2 0;
#X connect 1 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 276 336 pd more;
#X text 12 516 < https://en.wikipedia.org/wiki/Digital_biquad_filter#Direct_form_2 >.;
#X f 70;
#X text 12 192 WARNING: coefficients are not constrained. Bad ones could cause DAMAGES to your hardware.;
#X f 89;
#X text 12 132 w[n] = x[n] + a1 * w[n-1] + a2 * w[n-2];
#X text 12 156 y[n] = b0 * w[n] + b1 * w[n-1] + b2 * w[n-2];
#X connect 3 0 10 0;
#X connect 4 0 9 0;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X connect 15 0 5 0;
#X coords 0 0 1 1 250 175 0 0 0;
