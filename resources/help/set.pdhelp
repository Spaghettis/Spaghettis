#N canvas 725 232 516 316 12;
#X obj 228 276 append;
#X floatatom 36 108 5 0 0 0 - - -;
#X f 5;
#X floatatom 96 108 5 0 0 0 - - -;
#X f 5;
#X obj 192 192 pointer;
#X obj 96 276 get;
#X obj 12 12 cnv 15 275 45 empty empty empty 0 -7 0 10 #cccccc #000000;
#X obj -60 12 freeze;
#X text 24 24 set;
#X text 12 276 See also:;
#N canvas 768 243 385 289 init 0;
#X obj 204 192 pointer;
#X obj 96 24 loadbang;
#X obj 36 24 inlet;
#X obj 36 84 t b b;
#X f 5;
#X msg 204 156 clear \$0-data \, bang;
#X obj 36 240 append \$0-template;
#X msg 36 156 fish \, spider \, dog;
#X msg 36 192 fields s \$1;
#X connect 0 0 5 1;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 3 1 4 0;
#X connect 4 0 0 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 384 192 pd init;
#X obj 384 156 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#N canvas 395 202 300 289 \$0-data 1;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 384 216 pd \$0-data;
#N canvas 376 356 390 217 \$0-template 0;
#X obj 36 96 struct \$0-template float x float y symbol s;
#X obj 36 60 draw polygon -fill -- -5 0 0 5 5 0 0 -5;
#X obj 36 24 draw text -x 10 -y -7 -- s;
#X obj 36 132 constructor x rand()*250;
#X obj 36 168 constructor y rand()*250;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 384 240 pd \$0-template;
#X msg 192 156 next;
#X obj 192 108 loadbang;
#X msg 192 132 traverse \$0-data \, next;
#X obj 36 240 set \$0-template x y;
#X obj 36 156 pak;
#N canvas 727 572 368 163 more 0;
#X obj 36 120 set - x;
#X floatatom 36 48 5 0 0 0 - - -;
#X f 5;
#X obj 108 72 pointer;
#X msg 108 48 traverse \$0-data \, next;
#X text 12 12 Use a wild card (for heterogeneous collection).;
#X f 47;
#X connect 1 0 0 0;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 288 216 pd more;
#X text 12 72 Set values of a scalar.;
#N canvas 761 446 366 248 again 0;
#X text 12 12 Alternate approach using a key/value list.;
#X obj 36 204 set \$0-template;
#X obj 168 156 pointer;
#X msg 168 132 traverse \$0-data \, next;
#X msg 36 72 fields s jumbo;
#X msg 36 48 fields x 50 y 50;
#X obj 168 108 loadbang;
#X connect 2 0 1 1;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 3 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 288 240 pd again;
#X obj 132 276 constructor;
#X connect 1 0 17 0;
#X connect 2 0 17 1;
#X connect 3 0 16 2;
#X connect 10 0 9 0;
#X connect 13 0 3 0;
#X connect 14 0 15 0;
#X connect 15 0 3 0;
#X connect 17 0 16 0;
#X coords 0 0 1 1 250 175 0 0 0;
