
/* Copyright (c) 1997-2020 Miller Puckette and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#ifndef __x_mica_hpp_
#define __x_mica_hpp_

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#include "Belle.hpp"

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

t_symbol        *concept_tagParsed      (int argc, t_atom *argv);
t_symbol        *concept_tag            (mica::Concept c);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

mica::Concept   concept_fetch           (t_symbol *s);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void            *micaset_new            (t_symbol *s, int argc, t_atom *argv);
void            *micaget_new            (t_symbol *s, int argc, t_atom *argv);
void            *micainfo_new           (t_symbol *s, int argc, t_atom *argv);
void            *micasequence_new       (t_symbol *s, int argc, t_atom *argv);
void            *micamap_new            (t_symbol *s, int argc, t_atom *argv);
void            *micaindex_new          (t_symbol *s, int argc, t_atom *argv);
void            *micaitem_new           (t_symbol *s, int argc, t_atom *argv);
void            *micainterval_new       (t_symbol *s, int argc, t_atom *argv);
void            *micaspell_new          (t_symbol *s, int argc, t_atom *argv);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

typedef struct _micabase {
    t_object    x_obj;                  /* Must be the first. */
    t_symbol    *x_tag;
    } t_micabase;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

t_buffer    *micabase_functionData      (t_gobj *z, int flags);

void        micabase_restore            (t_micabase *x, t_symbol *s);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#endif // __x_mica_hpp_
