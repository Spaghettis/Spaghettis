
/* Copyright (c) 1997-2017 Miller Puckette and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#ifndef __s_time_h_
#define __s_time_h_

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

typedef uint64_t t_time;
typedef uint64_t t_nano;
typedef uint64_t t_stamp;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

typedef struct _timebase {
    t_time          time_;
    struct timeval  tv_;
    } t_timebase;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

uint64_t    time_makeRandomSeed         (void);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

/* Do NOT call time_addNanoseconds or time_elapsedNanoseconds at initialization time. */

/* < http://www.parashift.com/c++-faq/static-init-order.html > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void        time_set                    (t_time *t);
void        time_addNanoseconds         (t_time *t, const t_nano *ns);
t_error     time_elapsedNanoseconds     (const t_time *t0, const t_time *t1, t_nano *r);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void        nano_sleep                  (t_nano *ns);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

static inline void nano_withDouble (t_nano *ns, double f)
{
    (*ns) = (t_nano)f;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

/* < https://en.wikipedia.org/wiki/Network_Time_Protocol > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void        stamp_set                   (t_stamp *stamp);
void        stamp_addNanoseconds        (t_stamp *stamp, const t_nano *ns);
t_error     stamp_elapsedNanoseconds    (const t_stamp *t0, const t_stamp *t1, t_nano *r);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

t_error     timebase_init               (t_timebase *base);
t_error     timebase_timeToStamp        (const t_timebase *base, const t_time *t, t_stamp *stamp);
t_error     timebase_stampToTime        (const t_timebase *base, const t_stamp *stamp, t_time *t);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
#endif // __s_time_h_

