
/* Copyright (c) 1997-2017 Miller Puckette and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#ifndef __s_atomic_h_
#define __s_atomic_h_

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

/* Assume than 32-bit integer load and store are atomic. */

/* < http://preshing.com/20130618/atomic-vs-non-atomic-operations/ > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#if PD_32BIT
    #define PD_LOAD_STORE_32_IS_ATOMIC      1
#endif

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#if PD_64BIT
    #define PD_LOAD_STORE_32_IS_ATOMIC      1
    #define PD_LOAD_STORE_64_IS_ATOMIC      1
#endif

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

/* Note that the new value is returned. */
/* Note that thoses macros correspond only to relaxed atomic operations. */

/* < http://preshing.com/20130618/atomic-vs-non-atomic-operations/ > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

/* Alignment may not work on stack (don't use local atomic variables). */

/* < http://gcc.gnu.org/bugzilla/show_bug.cgi?id=16660 > */
/* < http://stackoverflow.com/questions/841433/gcc-attribute-alignedx-explanation > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#if PD_MAC_ATOMIC
    #include "s_atomicMac.h"
#endif

#if PD_POSIX_ATOMIC
    #include "s_atomicPosix.h"
#endif

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
#endif // __s_atomic_h_
