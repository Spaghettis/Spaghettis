
# Prelude.

SHELL = /bin/sh

export MACOSX_DEPLOYMENT_TARGET = 10.6

# Make paths.

VPATH = ../obj

PM_DIR = ../portmidi
PA_DIR = ../portaudio

BIN_DIR    = ../bin
TCL_DIR    = ../tcl
HELP_DIR   = ../resources/help
EXTRAS_DIR = ../resources/extras

# Install paths.

# /usr/local/bin/pd
# /usr/local/bin/pdsend
# /usr/local/bin/pdreceive
# /usr/local/include/m_pd.h
# /usr/local/lib/pd/bin/pdwatchdog
# /usr/local/lib/pd/tcl/*.tcl
# /usr/local/lib/pd/help/*.pdhelp

prefix          = /usr/local
exec_prefix     = $(prefix)
bindir          = $(exec_prefix)/bin
includedir      = $(prefix)/include
libdir          = $(exec_prefix)/lib
libpddir        = $(libdir)/pd
libpdbindir     = $(libpddir)/bin
libpdtcldir     = $(libpddir)/tcl
libpdhelpdir    = $(libpddir)/help
libpdextrasdir  = $(libpddir)/extras

# Linker flags.

LIB = -ldl -lpthread

LDFLAGS = -framework CoreAudio \
    -framework CoreMIDI \
    -framework AudioUnit \
    -framework AudioToolbox \
    -framework Carbon \
    $(ARCH)
    
# Preprocessor and compiler flags.

ifdef WITH_DEBUG

CPPFLAGS = -DPD_WITH_DEBUG \
    -DPD_BUILDING_APPLICATION \
    -I$(PM_DIR)/pm_common \
    -I$(PM_DIR)/pm_mac \
    -I$(PM_DIR)/porttime

CFLAGS = -gstabs -ffast-math -w $(ARCH)

else

CPPFLAGS = -DNDEBUG \
    -DPD_BUILDING_APPLICATION \
    -I$(PM_DIR)/pm_common \
    -I$(PM_DIR)/pm_mac \
    -I$(PM_DIR)/porttime

CFLAGS = -O3 -ffast-math -fvisibility=hidden -w $(ARCH)

endif

# PortMidi.

PORTMIDI_SRC = $(PM_DIR)/pm_mac/pmmac.c \
    $(PM_DIR)/pm_mac/pmmacosxcm.c \
    $(PM_DIR)/pm_mac/finddefault.c \
    $(PM_DIR)/pm_mac/readbinaryplist.c \
    $(PM_DIR)/pm_common/pmutil.c \
    $(PM_DIR)/pm_common/portmidi.c \
    $(PM_DIR)/porttime/ptmacosx_cf.c

# PortAudio.

PORTAUDIO_SRC = $(PA_DIR)/src/common/pa_allocation.c \
    $(PA_DIR)/src/common/pa_converters.c \
    $(PA_DIR)/src/common/pa_cpuload.c \
    $(PA_DIR)/src/common/pa_dither.c \
    $(PA_DIR)/src/common/pa_front.c \
    $(PA_DIR)/src/common/pa_process.c \
    $(PA_DIR)/src/common/pa_stream.c \
    $(PA_DIR)/src/common/pa_trace.c \
    $(PA_DIR)/src/common/pa_debugprint.c \
    $(PA_DIR)/src/common/pa_ringbuffer.c \
    $(PA_DIR)/src/os/unix/pa_unix_util.c \
    $(PA_DIR)/src/os/mac_osx/pa_mac_hostapis.c \
    $(PA_DIR)/src/hostapi/coreaudio/pa_mac_core.c \
    $(PA_DIR)/src/hostapi/coreaudio/pa_mac_core_blocking.c \
    $(PA_DIR)/src/hostapi/coreaudio/pa_mac_core_utilities.c
        
# Midi with PortMidi.

MIDI_SRC = s_midi_pm.c $(PORTMIDI_SRC)

# Audio. 

AUDIO_SRC = 

# Audio with PORTAUDIO.

ifdef WITH_PORTAUDIO
    CPPFLAGS += -I$(PA_DIR)/include \
        -I$(PA_DIR)/src/common \
        -I$(PA_DIR)/src/os/mac_osx \
        -DPA_USE_COREAUDIO
    AUDIO_SRC += s_logger_pa.c s_audio_pa.c $(PORTAUDIO_SRC)
endif

# Audio with JACK.

ifdef WITH_JACK
    LIB += -weak_framework Jackmp
    AUDIO_SRC += s_logger_jack.c s_audio_jack.c
endif

# The sources (filepath must NOT contain space).

SRC = amalgam.c \
    x_arrayrange.c x_array.c x_arrayget.c x_arrayset.c x_arrayquantile.c x_arrayrandom.c x_arraymax.c x_arraymin.c \
    x_list.c x_time.c \
    x_acoustics.c x_arithmetic.c x_connective.c x_gui.c x_interface.c \
    x_midi.c x_misc.c x_net.c \
    d_ugen.c d_ctl.c d_arithmetic.c d_osc.c d_filter.c d_dac.c d_misc.c \
    d_math.c d_fft.c d_fft_fftsg.c d_array.c d_global.c \
    d_delay.c d_resample.c d_soundfile.c

OBJ = $(SRC:.c=.o) $(MIDI_SRC:.c=.o) $(AUDIO_SRC:.c=.o)

# Targets.

.PHONY: all

all: $(BIN_DIR)/pd $(BIN_DIR)/pdwatchdog $(BIN_DIR)/pdsend $(BIN_DIR)/pdreceive

$(BIN_DIR):
	@test -d $(BIN_DIR) || mkdir -p $(BIN_DIR)

$(OBJ): %.o : %.c
	@echo "Build $@ ..."
	@$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

$(BIN_DIR)/pd: $(OBJ) | $(BIN_DIR)
	@echo "Build pd ..."
	@$(CC) $(LDFLAGS) -o $(BIN_DIR)/pd $(OBJ) $(LIB)

$(BIN_DIR)/pdwatchdog: u_watchdog.c | $(BIN_DIR)
	@echo "Build pdwatchdog ..."
	@$(CC) $(CPPFLAGS) $(CFLAGS) -o $(BIN_DIR)/pdwatchdog u_watchdog.c

$(BIN_DIR)/pdsend: u_pdsend.c | $(BIN_DIR)
	@echo "Build pdsend ..."
	@$(CC) $(CPPFLAGS) $(CFLAGS) -o $(BIN_DIR)/pdsend u_pdsend.c

$(BIN_DIR)/pdreceive: u_pdreceive.c | $(BIN_DIR)
	@echo "Build pdreceive ..."
	@$(CC) $(CPPFLAGS) $(CFLAGS) -o $(BIN_DIR)/pdreceive u_pdreceive.c

depend: makefile.dependencies

makefile.dependencies:
	@echo "Build makefile.dependencies ..."
	@$(CC) $(CPPFLAGS) -M $(SRC) > makefile.dependencies

clean:
	@echo "Remove makefile.dependencies ..."
	@-rm -f makefile.dependencies
	@echo "Remove objects ..."
	@-rm -f $(PORTAUDIO_SRC:.c=.o)
	@-rm -f $(OBJ)
	@-rm -f "s_audio_pa.o"
	@-rm -f "s_audio_jack.o"
	@-rm -f "s_logger_pa.o"
	@-rm -f "s_logger_jack.o"
	@echo "Remove binaries ..."
	@-rm -f $(BIN_DIR)/pd $(BIN_DIR)/pdsend $(BIN_DIR)/pdreceive $(BIN_DIR)/pdwatchdog
	@echo "Remove bin directory ..."
	@-rmdir $(BIN_DIR)

install: all
	@echo "Install binaries ..."
	install -d $(DESTDIR)$(bindir)
	install -m755 $(BIN_DIR)/pd $(DESTDIR)$(bindir)/pd
	install -m755 $(BIN_DIR)/pdsend $(DESTDIR)$(bindir)/pdsend
	install -m755 $(BIN_DIR)/pdreceive $(DESTDIR)$(bindir)/pdreceive
	@echo "Install pdwatchdog ..."
	install -d $(DESTDIR)$(libpdbindir)
	install $(BIN_DIR)/pdwatchdog $(DESTDIR)$(libpdbindir)/pdwatchdog
	@echo "Install scripts ..."
	install -d $(DESTDIR)$(libpdtcldir)
	install $(TCL_DIR)/*.tcl $(DESTDIR)$(libpdtcldir)
	@echo "Install help ..."
	install -d $(DESTDIR)$(libpdhelpdir)
	install $(HELP_DIR)/*.pdhelp $(DESTDIR)$(libpdhelpdir)
	install $(HELP_DIR)/*.txt $(DESTDIR)$(libpdhelpdir)
	install $(HELP_DIR)/*.aiff $(DESTDIR)$(libpdhelpdir)
	@echo "Install extras ..."
	install -d $(DESTDIR)$(libpdextrasdir)
	@echo "Install headers ..."
	install -d $(DESTDIR)$(includedir)
	install -m644 m_pd.h $(DESTDIR)$(includedir)/m_pd.h

uninstall:
	@echo "Uninstall binaries ..."
	rm -f $(DESTDIR)$(bindir)/pd
	rm -f $(DESTDIR)$(bindir)/pdsend
	rm -f $(DESTDIR)$(bindir)/pdreceive
	@echo "Uninstall pdwatchdog ..."
	@echo "Uninstall scripts ..."
	rm -f -r $(DESTDIR)$(libpddir)
	@echo "Uninstall help ..."
	rm -f -r $(DESTDIR)$(libpdhelpdir)
	@echo "Uninstall extras ..."
	rm -f -r $(DESTDIR)$(libpdextrasdir)
	@echo "Uninstall headers ..."
	rm -f $(DESTDIR)$(includedir)/m_pd.h

include makefile.dependencies
